'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace EmployeePortalWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ReturnClockinCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Clockins_Home_ServerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_SQL_Queries_For_Home_ServerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DropExtTablesThenTransferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendQueryToDb123OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataTableWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSQLTableFromDataTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Sample_CallingWebService.My.MySettings.Default.Sample_CallingWebService_SampeWS_WebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ReturnClockinCheckCompleted As ReturnClockinCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Clockins_Home_ServerCompleted As Get_Clockins_Home_ServerCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_SQL_Queries_For_Home_ServerCompleted As Get_SQL_Queries_For_Home_ServerCompletedEventHandler
        
        '''<remarks/>
        Public Event DropExtTablesThenTransferCompleted As DropExtTablesThenTransferCompletedEventHandler
        
        '''<remarks/>
        Public Event SendQueryToDb123Completed As SendQueryToDb123CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataTableWSCompleted As GetDataTableWSCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSQLTableFromDataTableCompleted As CreateSQLTableFromDataTableCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnClockinCheck", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReturnClockinCheck() As Integer
            Dim results() As Object = Me.Invoke("ReturnClockinCheck", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReturnClockinCheckAsync()
            Me.ReturnClockinCheckAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReturnClockinCheckAsync(ByVal userState As Object)
            If (Me.ReturnClockinCheckOperationCompleted Is Nothing) Then
                Me.ReturnClockinCheckOperationCompleted = AddressOf Me.OnReturnClockinCheckOperationCompleted
            End If
            Me.InvokeAsync("ReturnClockinCheck", New Object(-1) {}, Me.ReturnClockinCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnReturnClockinCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReturnClockinCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReturnClockinCheckCompleted(Me, New ReturnClockinCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Clockins_Home_Server", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Clockins_Home_Server() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Clockins_Home_Server", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Clockins_Home_ServerAsync()
            Me.Get_Clockins_Home_ServerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Clockins_Home_ServerAsync(ByVal userState As Object)
            If (Me.Get_Clockins_Home_ServerOperationCompleted Is Nothing) Then
                Me.Get_Clockins_Home_ServerOperationCompleted = AddressOf Me.OnGet_Clockins_Home_ServerOperationCompleted
            End If
            Me.InvokeAsync("Get_Clockins_Home_Server", New Object(-1) {}, Me.Get_Clockins_Home_ServerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Clockins_Home_ServerOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Clockins_Home_ServerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Clockins_Home_ServerCompleted(Me, New Get_Clockins_Home_ServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_SQL_Queries_For_Home_Server", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_SQL_Queries_For_Home_Server() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_SQL_Queries_For_Home_Server", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_SQL_Queries_For_Home_ServerAsync()
            Me.Get_SQL_Queries_For_Home_ServerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_SQL_Queries_For_Home_ServerAsync(ByVal userState As Object)
            If (Me.Get_SQL_Queries_For_Home_ServerOperationCompleted Is Nothing) Then
                Me.Get_SQL_Queries_For_Home_ServerOperationCompleted = AddressOf Me.OnGet_SQL_Queries_For_Home_ServerOperationCompleted
            End If
            Me.InvokeAsync("Get_SQL_Queries_For_Home_Server", New Object(-1) {}, Me.Get_SQL_Queries_For_Home_ServerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_SQL_Queries_For_Home_ServerOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_SQL_Queries_For_Home_ServerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_SQL_Queries_For_Home_ServerCompleted(Me, New Get_SQL_Queries_For_Home_ServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DropExtTablesThenTransfer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DropExtTablesThenTransfer()
            Me.Invoke("DropExtTablesThenTransfer", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DropExtTablesThenTransferAsync()
            Me.DropExtTablesThenTransferAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DropExtTablesThenTransferAsync(ByVal userState As Object)
            If (Me.DropExtTablesThenTransferOperationCompleted Is Nothing) Then
                Me.DropExtTablesThenTransferOperationCompleted = AddressOf Me.OnDropExtTablesThenTransferOperationCompleted
            End If
            Me.InvokeAsync("DropExtTablesThenTransfer", New Object(-1) {}, Me.DropExtTablesThenTransferOperationCompleted, userState)
        End Sub
        
        Private Sub OnDropExtTablesThenTransferOperationCompleted(ByVal arg As Object)
            If (Not (Me.DropExtTablesThenTransferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DropExtTablesThenTransferCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendQueryToDb123", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendQueryToDb123(ByVal query As String, ByVal showerrors As Boolean)
            Me.Invoke("SendQueryToDb123", New Object() {query, showerrors})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendQueryToDb123Async(ByVal query As String, ByVal showerrors As Boolean)
            Me.SendQueryToDb123Async(query, showerrors, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendQueryToDb123Async(ByVal query As String, ByVal showerrors As Boolean, ByVal userState As Object)
            If (Me.SendQueryToDb123OperationCompleted Is Nothing) Then
                Me.SendQueryToDb123OperationCompleted = AddressOf Me.OnSendQueryToDb123OperationCompleted
            End If
            Me.InvokeAsync("SendQueryToDb123", New Object() {query, showerrors}, Me.SendQueryToDb123OperationCompleted, userState)
        End Sub
        
        Private Sub OnSendQueryToDb123OperationCompleted(ByVal arg As Object)
            If (Not (Me.SendQueryToDb123CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendQueryToDb123Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTableWS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataTableWS(ByVal stringSQL As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDataTableWS", New Object() {stringSQL})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataTableWSAsync(ByVal stringSQL As String)
            Me.GetDataTableWSAsync(stringSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataTableWSAsync(ByVal stringSQL As String, ByVal userState As Object)
            If (Me.GetDataTableWSOperationCompleted Is Nothing) Then
                Me.GetDataTableWSOperationCompleted = AddressOf Me.OnGetDataTableWSOperationCompleted
            End If
            Me.InvokeAsync("GetDataTableWS", New Object() {stringSQL}, Me.GetDataTableWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataTableWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataTableWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataTableWSCompleted(Me, New GetDataTableWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSQLTableFromDataTable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateSQLTableFromDataTable(ByVal dt As System.Data.DataTable, ByVal TableName As String, ByVal BatchMode As Boolean)
            Me.Invoke("CreateSQLTableFromDataTable", New Object() {dt, TableName, BatchMode})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSQLTableFromDataTableAsync(ByVal dt As System.Data.DataTable, ByVal TableName As String, ByVal BatchMode As Boolean)
            Me.CreateSQLTableFromDataTableAsync(dt, TableName, BatchMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSQLTableFromDataTableAsync(ByVal dt As System.Data.DataTable, ByVal TableName As String, ByVal BatchMode As Boolean, ByVal userState As Object)
            If (Me.CreateSQLTableFromDataTableOperationCompleted Is Nothing) Then
                Me.CreateSQLTableFromDataTableOperationCompleted = AddressOf Me.OnCreateSQLTableFromDataTableOperationCompleted
            End If
            Me.InvokeAsync("CreateSQLTableFromDataTable", New Object() {dt, TableName, BatchMode}, Me.CreateSQLTableFromDataTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSQLTableFromDataTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSQLTableFromDataTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSQLTableFromDataTableCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReturnClockinCheckCompletedEventHandler(ByVal sender As Object, ByVal e As ReturnClockinCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReturnClockinCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Get_Clockins_Home_ServerCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Clockins_Home_ServerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Clockins_Home_ServerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Get_SQL_Queries_For_Home_ServerCompletedEventHandler(ByVal sender As Object, ByVal e As Get_SQL_Queries_For_Home_ServerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_SQL_Queries_For_Home_ServerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DropExtTablesThenTransferCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SendQueryToDb123CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetDataTableWSCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataTableWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataTableWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CreateSQLTableFromDataTableCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
